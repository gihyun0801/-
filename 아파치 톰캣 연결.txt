이클립스에 

서버 톰캣 연결하는법

window - server - envrioment server - add - 내가 다운로드 받은 버전 - 다운받은 폴더 

이렇게 하면 이클립스를 켯을때 어떤 거로 연결할지 하는것

서버 연결을 햇으면  - 서버 연결

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

콘솔창에 servers 에 문구를 클릭해 다시 연결하고 서버이름을 정한다 - 서버 지정

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

이제 프로젝트를 dy 검색어에 입력해서

다이나믹 프로젝트를 클릭해서 만든다 

서버 설정되어있는 확인하고 next 해서 Generate web.xml ... **필수 체크** 

-----------------------------
web.xml
을 보면 wep-app 이 빨간밑줄인데 이건

window - xml (wild web developer) 에서 download external ... 체크

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

vscode 켜서 java 서버파일 wepapp 에 web.xml 중에서 이름 하나 골라서 그걸 vscode 파일이름으로 만들어주고
내용 적음

----------------------------------------------------------------------------------------------------------------

검색창에서 서버에 요청할때

최상위인 server를 검색어에 입력해야되는데 귀찮으면 servers - Modules(서버 사용이력) 가서 edit - path 에 / 슬래쉬 하나만 남겨놓는다

or

dynamic 프로젝트 만들때 next 하다보면 Context root 가 있는데 여기 이름을 / 이거로 설정해도된다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ




프로젝트 우클릭

run as server - run on server 버전 선택후 하면 콘솔창에 머가 뜨고 메인페이지 가 사이트로 보여진다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


vscode 로 html 에 작성하고

자바에 src 폴더 src/main/java 에다가 클래스를 하나 만들고  == 백엔드 처리

거기 클래스를 extends로 HttpServlet 을 상속받고

클래스안에다가 doGet() 메서드 생성

하고

web.xml 파일로 가서


<servlet>  

안에다가  

<servlet-class> 태그 안에다가 백엔드 클래스 적고 </<servlet-class>>
<servlet-name> 에다가 저 클래스 별명을 지정 


 </servlet>



<servlet-mapping> 태그 안에다가

<servlet-name> 저거 클래스 별명 적고

<url-pattern> 안에다가 vscode 에 form action 에 작성한 주소 값 넣음

클래스로 돌아가서 

값을 받을라면 getParameter (name값) 

이건 무조건 String 참조로 갖고온다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

서버에서 클라이언트로 출력 

// 서버 -> 클라이언트로 연결되는 스트림 얻어오기
	 // 서버에서 클라이언트로 응답하는 방법은 응답 페이지만들어 보냄.
	 resp.setContentType("text/html; charset=UTF-8");
	 
	 PrintWriter out = resp.getWriter(); // 서버 - > 클라이언트에게 출력하기 html 에출력
	 
	 out.println("<!DOCTYPE html>");
	 out.println("<html>");
	 
	 out.println("<head>");
	 
	 out.println("<title>서버응답결과</title>");
	 
	 out.println("<body>");
	 
	 out.println("<h1>");
	 out.println(name + "님의 나이는" + age + "세 입니다");
	 out.println("</h1>");
	 
	 out.println("</body>");
	 
	 
	 out.println("</head>");
	 
	 out.println("</html>");
	 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

web.xml 에 적는 방식이 너무 비효율적이라서 새로운 방식이 생겨낫다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

클래스에 바로 위에 @WebServlet import 

@WebServlet("/signUp")
public class ExampleController2 extends HttpServlet{
 
이런식으로 작성 괄호안에는 form안에있는 url을 적어준다 그럼
 자동으로 web.xml 에 <servlet> <servlet-mapping> 이런거랑 똑같다고 보면된다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

요청을 받고 응답을 할때

저기 위에있는 코드처럼 치기 귀찮으니까 
jsp한테 대신해달라고 하면된다

사용법은

RequestDispatcher 변수명 = req.getRequestDispatcher("WEP-INF/폴더/파일명.jsp")

변수명.forward(req,resp) 

forward 는 요청을 위임 한다는 뜻이다

jsp

파일안에를 전부 UTF-8 로 바꿔준다

jsp 파일안에는

<%@ > 지시자태그

<% %> 스크립틀릿 -> 이 안엔 자바코드 작성

<%= %> jsp 표현식 -> 자바 , 서버에서 받아온 값을 표현할때 혹은 출력

html 에 input checkbox 를 여러개 나오게하고 name을 똑같은 값을 주면 value가 어떻게 나오냐??

배열형식으로 나온다



